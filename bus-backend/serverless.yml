service: bus-backend

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  profile: home
  versionFunctions: false
  logRetentionInDays: 30
  environment:
    BUS_TABLE: ${self:custom.busTableName}
custom:
  stage: ${opt:stage, self:provider.stage}
  environments:
    dev: dev
    prod: prod
  environment: ${self:custom.environments.${self:custom.stage}, self:custom.environments.dev}
  busTableName: !ImportValue ExtPennyTableName-${self:custom.environment}
  busTableARN: !ImportValue ExtPennyTableARN-${self:custom.environment}
  esbuild:
    bundle: true
    minify: true
    exclude:
      - "*"
    external:
      - next

plugins:
  - serverless-esbuild
  - serverless-offline
functions:
  Create:
    handler: ./Create.handler
    role: BusTableLambdaRole
    events:
      - http:
          method: POST
          path: api/{type}/{slug}
          cors: true
  Get:
    handler: ./Get.handler
    role: BusTableLambdaRole
    events:
      - http:
          method: GET
          path: api/{type}/{slug}
          cors: true
  GetAll:
    handler: ./GetAll.handler
    role: BusTableLambdaRole
    events:
      - http:
          method: GET
          path: api/{type}
          cors: true
  Update:
    handler: ./Update.handler
    role: BusTableLambdaRole
    events:
      - http:
          method: PUT
          path: api/{type}/{slug}
          cors: true
  Delete:
    handler: ./Delete.handler
    role: BusTableLambdaRole
    events:
      - http:
          method: DELETE
          path: api/{type}/{slug}
          cors: true

resources:
  Resources:
    BusTableLambdaRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: BusTableLambdaRole-${self:custom.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - edgelambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: "LambdaRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - logs:*
                  Resource: arn:aws:logs:*:*:*

          - PolicyName: "PutBusSiteDB"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "dynamodb:GetItem"
                    - "dynamodb:Query"
                    - "dynamodb:PutItem"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:DeleteItem"
                  Resource:
                    ${self:custom.busTableARN}
  Outputs:
    PennyBackendAPI:
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: ExtPennyBackendAPI-${self:custom.stage}
